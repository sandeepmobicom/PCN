<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="Mobicoms-Mini-2" ignored="0" name="Test on iOS device" tests="1" failures="0" timestamp="06 Nov 2017 11:20:49 GMT" time="1.067" errors="0">
  <testcase name="@BeforeClass beforeTheClass" time="1.034" classname="com.mobicom.tests.IosTestClass">
    <failure type="org.openqa.selenium.WebDriverException" message="An unknown server-side error occurred while processing the command. Original error: The desired capabilities must include either an app or a bundleId for iOS (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 324 milliseconds
Build info: version: &amp;apos;3.6.0&amp;apos;, revision: &amp;apos;6fbf3ec767&amp;apos;, time: &amp;apos;2017-09-27T16:15:40.131Z&amp;apos;
System info: host: &amp;apos;Mobicoms-Mini-2&amp;apos;, ip: &amp;apos;192.168.1.109&amp;apos;, os.name: &amp;apos;Mac OS X&amp;apos;, os.arch: &amp;apos;x86_64&amp;apos;, os.version: &amp;apos;10.13&amp;apos;, java.version: &amp;apos;1.8.0_144&amp;apos;
Driver info: driver.version: IOSDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: The desired capabilities must include either an app or a bundleId for iOS (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 324 milliseconds
Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T16:15:40.131Z'
System info: host: 'Mobicoms-Mini-2', ip: '192.168.1.109', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13', java.version: '1.8.0_144'
Driver info: driver.version: IOSDriver
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$new$0(JsonWireProtocolResponse.java:53)
	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$getResponseFunction$2(JsonWireProtocolResponse.java:91)
	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$24(ProtocolHandshake.java:359)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)
	at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126)
	at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:362)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:136)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142)
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:89)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:586)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.ios.IOSDriver.execute(IOSDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:217)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:140)
	at io.appium.java_client.DefaultGenericMobileDriver.<init>(DefaultGenericMobileDriver.java:38)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:83)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:93)
	at io.appium.java_client.ios.IOSDriver.<init>(IOSDriver.java:78)
	at com.mobicom.helpers.GetDriver2.getDriver(GetDriver2.java:104)
	at com.mobicom.helpers.GetDriver2.testiOSDriver(GetDriver2.java:53)
	at com.mobicom.tests.BaseTest.initIosTest(BaseTest.java:22)
	at com.mobicom.tests.IosTestClass.beforeTheClass(IosTestClass.java:16)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass beforeTheClass -->
  <testcase name="f" time="0.0" classname="com.mobicom.tests.IosTestClass">
    <skipped/>
  </testcase> <!-- f -->
</testsuite> <!-- Test on iOS device -->
